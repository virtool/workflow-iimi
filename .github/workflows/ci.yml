name: CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

permissions:
  contents: read

env:
  IMAGE_NAME: virtool/iimi
  NODE_VERSION: 22
  REGISTRY: ghcr.io

jobs:
  ruff-format:
    name: Ruff / Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install mise
        uses: jdx/mise-action@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync
      - name: Check formatting
        run: uv run ruff format --check .

  ruff-lint:
    name: Ruff / Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install mise
        uses: jdx/mise-action@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync
      - name: Check linting
        run: uv run ruff check .

  publish-release:
    name: "Publish / Release"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      git-tag: ${{ steps.release.outputs.git-tag }}
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Install semantic-release
        run: npm i semantic-release@v23.0.0 @semantic-release/exec@v6.0.3 conventional-changelog-conventionalcommits@7.0.2
      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  publish-ghcr:
    name: "Publish / GHCR"
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Virtool' && github.event_name == 'push' && needs.release.outputs.git-tag != ''
    needs: [publish-release]
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.git-tag }}
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      - name: Build and Push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}